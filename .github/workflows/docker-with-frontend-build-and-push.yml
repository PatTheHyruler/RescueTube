name: Publish image (front-end included)

on:
  workflow_dispatch:
    inputs:
      frontend_tag:
        description: 'Tag of the front-end repo commit to use'
        required: false
      backend_tag:
        description: 'Tag of the back-end repo commit to use'
        required: false
      docker_tags:
        description: 'Tags to use for the Docker image'
        required: true

env:
  VITE_API_URL: ./api

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Determine frontend ref to checkout
        id: determine-frontend-ref
        run: echo "ref=${{ github.event.inputs.frontend_tag && format('refs/tags/{0}', github.event.inputs.frontend_tag) || null }}" >> $GITHUB_OUTPUT

      - name: Frontend - Checkout repository
        uses: actions/checkout@v4
        with:
          repository: ${{ vars.FRONTEND_SOLIDJS_REPO }}
          ssh-key: ${{ secrets.FRONTEND_SOLIDJS_REPO_SSH_KEY }}
          path: ./frontend
          ref: ${{ steps.determine-frontend-ref.outputs.ref }}

      - name: Frontend - Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Frontend - Install pnpm
        run: npm install -g pnpm

      - name: Frontend - Install dependencies
        run: pnpm install --frozen-lockfile
        working-directory: ./frontend

      - name: Frontend - Build with pnpm
        run: pnpm run build
        working-directory: ./frontend

      - name: Determine backend ref to checkout
        id: determine-backend-ref
        run: echo "ref=${{ github.event.inputs.backend_tag && format('refs/tags/{0}', github.event.inputs.backend_tag) || github.ref || null }}" >> $GITHUB_OUTPUT

      - name: Backend - Checkout repository
        uses: actions/checkout@v4
        with:
          path: ./backend
          ref: ${{ steps.determine-backend-ref.outputs.ref }}

      - name: Copy frontend dist to backend
        run: mkdir -p ./backend/WebApp/ClientApp && cp -r ./frontend/dist/* ./backend/WebApp/ClientApp

      - name: Log in to Docker Hub
        uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ vars.DOCKER_HUB_NAMESPACE }}/${{ vars.DOCKER_HUB_REPOSITORY }}
          flavor: |
            latest=auto
            prefix=${{ github.event_name != 'workflow_dispatch' && 'backend-' || '' }}
            suffix=
      
      - name: Format custom Docker tags properly
        id: custom-docker-tags
        run: |
          input_tags="${{ github.event.inputs.docker_tags }}"
          prefix="${{ vars.DOCKER_HUB_NAMESPACE }}/${{ vars.DOCKER_HUB_REPOSITORY }}"
          output_tags=$(echo "$input_tags" | awk -v prefix="$prefix" -F',' '{ for (i=1; i<=NF; i++) printf "%s:%s%s", prefix, $i, (i==NF ? "" : ",") }')
          echo "tags=$output_tags" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0
        with:
          context: ./backend
          file: ./backend/WebApp/Dockerfile
          push: true
          tags: ${{ steps.custom-docker-tags.outputs.tags || steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
